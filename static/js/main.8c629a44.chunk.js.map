{"version":3,"sources":["assets/firework0.mp3","assets/firework1.mp3","assets/firework2.mp3","assets/firework3.mp3","components/Overlay/index.jsx","components/InputField/index.jsx","components/InfoCollector/Index.jsx","components/InfoManager/index.jsx","utils/index.js","components/HappyBirthday/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Overlay","props","react_default","a","createElement","onClick","className","concat","open","children","InputField","_ref","id","onFormSubmit","onSubmit","_ref$type","type","_ref$initialValue","initialValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","event","preventDefault","defineProperty","onChange","target","placeholder","InfoCollector","components_Overlay","text","components_InputField","NameText","role","aria-label","BirthDateText","name","InfoManager","Fragment","Index","InfoManager_NameText","dateOfBirth","InfoManager_BirthDateText","randint","b","Math","floor","random","booms","Audio","audio0","audio1","audio2","audio3","fireworks","FireWork","x","y","vx","vy","colour","ttl","radius","isBase","classCallCheck","this","createClass","key","_this","_ref$ax","ax","_ref$ay","ay","_fireworks","length","play","sparks","Array","from","_","createFireWork","push","apply","toConsumableArray","width","height","arguments","undefined","destination","_ref2","_ref3","HappyBirthday","toUpperCase","slice","toLowerCase","App","userData","setUserData","canvas","useRef","useEffect","ctx","current","getContext","setInterval","_ctx$canvas","firework","filter","clearRect","forEach","min","lineWidth","strokeStyle","fillStyle","beginPath","arc","PI","fill","globalAlpha","stroke","update","fireworksTick","components_InfoManager","assign","data","objectSpread","window","innerHeight","ref","innerWidth","components_HappyBirthday","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wRCYzBC,eATC,SAAAC,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OACEC,QAASJ,EAAMI,QACfC,UAAS,oBAAAC,OAAsBN,EAAMO,KAAO,QAAU,KAErDP,EAAMQ,mBCwBIC,SA7BI,SAAAC,GAKb,IAJJC,EAIID,EAJJC,GACUC,EAGNF,EAHJG,SAGIC,EAAAJ,EAFJK,YAEI,IAAAD,EAFG,OAEHA,EAAAE,EAAAN,EADJO,oBACI,IAAAD,EADW,GACXA,EAAAE,EACsBC,mBAASF,GAD/BG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACGK,EADHH,EAAA,GACUI,EADVJ,EAAA,GAQJ,OACEnB,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAaQ,SANd,SAAAY,GACfA,EAAMC,iBACNd,EAAaS,OAAAM,EAAA,EAAAN,CAAA,GAAGV,EAAKY,MAKnBtB,EAAAC,EAAAC,cAAA,SACEE,UAAU,cACVuB,SAVW,SAAAH,GAAK,OAAID,EAASC,EAAMI,OAAON,QAW1CO,YACS,SAAPnB,EAAgB,sBAAwB,uBAE1CI,KAAMA,EACNQ,MAAOA,IAETtB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaU,KAAK,SAASQ,MAAM,UCdzCQ,EATO,SAAA/B,GACpB,OACEC,EAAAC,EAAAC,cAAC6B,EAAD,CAASzB,KAAMP,EAAMO,MAClBP,EAAMiC,KACPhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAYvB,GAAIX,EAAMW,GAAIE,SAAUb,EAAMa,SAAUE,KAAMf,EAAMe,SCJhEoB,SAAW,SAAAnC,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,iBAA5B,gBADF,yCAKEpC,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,sBAA5B,mBAMEC,EAAgB,SAAAtC,GAAK,OACzBC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,iBAA5B,gBADF,cAIcrC,EAAMuC,KAJpB,4BAKEtC,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,iBAA5B,kBAwBWG,EAlBK,SAAAxC,GAAK,OACvBC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAACuC,EAAD,CACE/B,GAAG,OACHE,SAAUb,EAAMa,SAChBN,MAAOP,EAAMuC,KACbN,KAAMhC,EAAAC,EAAAC,cAACwC,EAAD,QAER1C,EAAAC,EAAAC,cAACuC,EAAD,CACE/B,GAAG,cACHE,SAAUb,EAAMa,SAChBN,KAAMP,EAAMuC,OAASvC,EAAM4C,YAC3BX,KAAMhC,EAAAC,EAAAC,cAAC0C,EAAD,CAAeN,KAAMvC,EAAMuC,OACjCxB,KAAK,mGC7BE+B,EAAU,SAAC5C,EAAG6C,GAAJ,OAAUC,KAAKC,MAAMD,KAAKE,UAAYH,EAAI7C,EAAI,IAAMA,GAE9DiD,EAAQ,CACnB,IAAIC,MAAMC,KACV,IAAID,MAAME,KACV,IAAIF,MAAMG,KACV,IAAIH,MAAMI,MAORC,EAAY,GAEHC,EAAb,WACE,SAAAA,EAAYC,EAAGC,EAAGC,EAAIC,EAAIC,EAAQC,EAAKC,EAAQC,GAAS7C,OAAA8C,EAAA,EAAA9C,CAAA+C,KAAAV,GACtDU,KAAKT,EAAIA,EACTS,KAAKR,EAAIA,EACTQ,KAAKP,GAAKA,EACVO,KAAKN,GAAKA,EACVM,KAAKL,OAASA,EACdK,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EACdG,KAAKF,OAASA,EATlB,OAAA7C,OAAAgD,EAAA,EAAAhD,CAAAqC,EAAA,EAAAY,IAAA,SAAA/C,MAAA,SAAAb,GAW6B,IAAA6D,EAAAH,KAAAI,EAAA9D,EAAlB+D,UAAkB,IAAAD,EAAb,EAAaA,EAAAE,EAAAhE,EAAViE,UAAU,IAAAD,EAAL,EAAKA,EAMzB,GALAN,KAAKT,GAAKS,KAAKP,GACfO,KAAKR,GAAKQ,KAAKN,GACfM,KAAKP,IAAMY,EACXL,KAAKN,IAAMa,IACTP,KAAKJ,IACHI,KAAKJ,KAAO,GAAKI,KAAKF,OAAQ,KAAAU,EAtBpCzB,EAAML,EAAQ,EAAGK,EAAM0B,OAAS,IAAIC,OAwBhC,IAAMC,EAASC,MAAMC,KAAK,CAAEJ,OAAQ/B,EAAQ,GAAI,KAAO,SAAAoC,GAAC,OACtDC,EAAeZ,EAAKZ,EAAGY,EAAKX,EAAG,EAAG,EAAGW,EAAKR,QAAQ,MAEpDa,EAAAnB,GAAU2B,KAAVC,MAAAT,EAAAvD,OAAAiE,EAAA,EAAAjE,CAAkB0D,SAtBxBrB,EAAA,GA2BayB,EAAiB,SAACxB,EAAGC,EAAG2B,EAAOC,EAAQzB,GAA0B,IAAlBG,IAAkBuB,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,KAAAA,UAAA,GACtEzB,EAAelB,EAAToB,EAAiB,GAAmB,GAAf,KAC3ByB,EAAczB,EAChB,CAAEP,EAAG4B,EAAQvC,KAAKE,SAAUU,EAAI4B,EAAS,GAAMxC,KAAKE,UACpD,GAJwE0C,EAK3D1B,EACb,EAAEyB,EAAYhC,EAAIA,GAAKK,GAAM2B,EAAY/B,EAAIA,GAAKI,GAClD,CAAC,IAAM,GAAMhB,KAAKE,WAAY,IAAM,IAAOF,KAAKE,WAPwB2C,EAAAxE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GAKrE/B,EALqEgC,EAAA,GAKjE/B,EALiE+B,EAAA,GAQ5E,OAAO,IAAInC,EACTC,EACAC,EACAC,EACAC,EACAI,EAAM,OAAA5D,OACK,IAAMwC,EAAQ,EAAG,KADtB,KAAAxC,OAC8B,IAAMwC,EAAQ,EAAG,KAD/C,KAAAxC,OACuD,IACvDwC,EAAQ,EAAG,KAFX,KAGFiB,EACJC,EACAE,EAASpB,EAAQ,EAAG,GAAKA,EAAQ,EAAG,GACpCoB,ICrDW4B,SAjBO,SAAA9F,GAAK,OACzBC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,iBAA5B,gBAGApC,EAAAC,EAAAC,cAAA,4BACkB,IACfH,EAAMuC,KAAK,GAAGwD,cAAgB/F,EAAMuC,KAAKyD,MAAM,GAAGC,eAErDhG,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,gBAA5B,mBC4BW6D,EAlCH,WAAM,IAAAhF,EACgBC,mBAAS,IADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTiF,EADS/E,EAAA,GACCgF,EADDhF,EAAA,GAEViF,EAASC,iBAAO,MAWtB,OAPAC,oBAAU,WAER,GAAIJ,EAAS5D,MAAQ4D,EAASvD,YAAa,CACzC,IAAM4D,EAAMH,EAAOI,QAAQC,WAAW,MACtCC,YAAY,kBF6DW,SAAAH,GAAO,IAAAI,EACRJ,EAAIH,OAAtBd,EAD0BqB,EAC1BrB,MAAOC,EADmBoB,EACnBpB,OACf,GAAIxC,KAAKE,SAAW,IAAM,CACxB,IAAM2D,EAAW1B,EACfI,GAAS,IAAM,GAAMvC,KAAKE,UAC1BsC,GAAU,EAAI,GAAMxC,KAAKE,UACzBqC,EACAC,GACA,GAEF/B,EAAU2B,KAAKyB,GAEjBpD,EAAYA,EAAUqD,OAAO,SAAAD,GAAQ,OAAIA,EAAS7C,MAClDwC,EAAIO,UAAU,EAAG,EAAGxB,EAAOC,GAC3B/B,EAAUuD,QAAQ,SAAAH,GAChB,IAAI5C,EAAS4C,EAAS3C,OAClB2C,EAAS5C,OACTjB,KAAKiE,IAAIJ,EAAS5C,OAAQ4C,EAAS7C,IAAM,GAC7CwC,EAAIU,UAAYjD,EAChBuC,EAAIW,YAAcN,EAAS9C,OAC3ByC,EAAIY,UAAYP,EAAS9C,OACzByC,EAAIa,YACJb,EAAIc,IAAIT,EAASlD,EAAGkD,EAASjD,EAAGK,EAAS,EAAG,EAAG,EAAIjB,KAAKuE,IACxDf,EAAIgB,OACJhB,EAAIiB,YAAc,GAClBjB,EAAIkB,SACJb,EAASc,OAAO,CAAElD,GAAI,EAAGE,GAAIa,EAAS,MACtCvB,EAAS4C,EAAS3C,OACd2C,EAAS5C,OACTjB,KAAKiE,IAAIJ,EAAS5C,OAAQ4C,EAAS7C,IAAM,GAC7CwC,EAAIU,UAAYjD,EAChBuC,EAAIW,YAAcN,EAAS9C,OAC3ByC,EAAIY,UAAYP,EAAS9C,OACzByC,EAAIa,YACJb,EAAIc,IAAIT,EAASlD,EAAGkD,EAASjD,EAAGK,EAAS,EAAG,EAAG,EAAIjB,KAAKuE,IACxDf,EAAIgB,OACJhB,EAAIiB,YAAc,EAClBjB,EAAIkB,WElGgBE,CAAcpB,IAAM,MAEvC,CAACL,EAAS5D,KAAM4D,EAASvD,cAE1B3C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC0H,EAADxG,OAAAyG,OAAA,CAAajH,SAZA,SAAAkH,GACf3B,EAAY/E,OAAA2G,EAAA,EAAA3G,CAAA,GAAK8E,EAAa4B,MAWS5B,IACpCA,EAAS5D,MAAQ4D,EAASvD,aACzB3C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAAA,UACEQ,GAAG,SACH6E,OAAQyC,OAAOC,YACfC,IAAK9B,EACLd,MAAO0C,OAAOG,aAEhBnI,EAAAC,EAAAC,cAACkI,EAAD,CACE9F,KAAM4D,EAAS5D,KACfK,YAAauD,EAASvD,iBCpBd0F,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1I,EAAAC,EAAAC,cAACyI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8c629a44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/firework0.320014c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/firework1.8c936340.mp3\";","module.exports = __webpack_public_path__ + \"static/media/firework2.56e0141f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/firework3.1f8c7856.mp3\";","import React from 'react';\nimport './overlay.css';\n\nconst Overlay = props => (\n  <div\n    onClick={props.onClick}\n    className={`overlay-container${props.open ? ' open' : ''}`}\n  >\n    {props.children}\n  </div>\n);\n\nexport default Overlay;\n","import React, { useState } from 'react';\nimport './InputField.css';\n\nconst InputField = ({\n  id,\n  onSubmit: onFormSubmit,\n  type = 'text',\n  initialValue = ''\n}) => {\n  const [value, setValue] = useState(initialValue);\n  const onChange = event => setValue(event.target.value);\n  const onSubmit = event => {\n    event.preventDefault();\n    onFormSubmit({ [id]: value });\n  };\n\n  return (\n    <form className=\"input-form\" onSubmit={onSubmit}>\n      <input\n        className=\"input-field\"\n        onChange={onChange}\n        placeholder={\n          id === 'name' ? 'Type your name here' : 'Pick your birth date'\n        }\n        type={type}\n        value={value}\n      />\n      <input className=\"submit-btn\" type=\"submit\" value=\"Ok\" />\n    </form>\n  );\n};\n\nexport default InputField;\n","import React from 'react';\nimport Overlay from '../Overlay';\nimport InputField from '../InputField';\n\nconst InfoCollector = props => {\n  return (\n    <Overlay open={props.open}>\n      {props.text}\n      <InputField id={props.id} onSubmit={props.onSubmit} type={props.type} />\n    </Overlay>\n  );\n};\n\nexport default InfoCollector;\n","import React from 'react';\nimport InfoCollector from '../InfoCollector/Index';\nimport './InfoManager.css';\n\nconst NameText = props => (\n  <div className=\"info-collector-text\">\n    <span role=\"img\" aria-label=\"Birthday Cake\">\n      🎂\n    </span>\n    Welcome-uh... What is your name Again?\n    <span role=\"img\" aria-label=\"Birthday Shortcake\">\n      🍰\n    </span>\n  </div>\n);\n\nconst BirthDateText = props => (\n  <div className=\"info-collector-text\">\n    <span role=\"img\" aria-label=\"Birthday Gift\">\n      🎁\n    </span>\n    Brilliant, {props.name}! And when were you born?\n    <span role=\"img\" aria-label=\"Birthday Date\">\n      📅\n    </span>\n  </div>\n);\n\nconst InfoManager = props => (\n  <>\n    <InfoCollector\n      id=\"name\"\n      onSubmit={props.onSubmit}\n      open={!props.name}\n      text={<NameText />}\n    />\n    <InfoCollector\n      id=\"dateOfBirth\"\n      onSubmit={props.onSubmit}\n      open={props.name && !props.dateOfBirth}\n      text={<BirthDateText name={props.name} />}\n      type=\"date\"\n    />\n  </>\n);\n\nexport default InfoManager;\n","import audio0 from '../assets/firework0.mp3';\nimport audio1 from '../assets/firework1.mp3';\nimport audio2 from '../assets/firework2.mp3';\nimport audio3 from '../assets/firework3.mp3';\n\nconst localStoragePath = 'happy-birthday';\n\nexport const loadState = () =>\n  JSON.parse(localStorage.getItem(localStoragePath));\n\nexport const saveState = state => localStorage.setItem(localStoragePath, state);\n\nexport const randint = (a, b) => Math.floor(Math.random() * (b - a + 1)) + a;\n\nexport const booms = [\n  new Audio(audio0),\n  new Audio(audio1),\n  new Audio(audio2),\n  new Audio(audio3)\n];\n\nexport const boom = () => {\n  booms[randint(0, booms.length - 1)].play();\n};\n\nlet fireworks = [];\n\nexport class FireWork {\n  constructor(x, y, vx, vy, colour, ttl, radius, isBase) {\n    this.x = x;\n    this.y = y;\n    this.vx = vx;\n    this.vy = vy;\n    this.colour = colour;\n    this.ttl = ttl;\n    this.radius = radius;\n    this.isBase = isBase;\n  }\n  update({ ax = 0, ay = 0 }) {\n    this.x += this.vx;\n    this.y += this.vy;\n    this.vx += ax;\n    this.vy += ay;\n    --this.ttl;\n    if (this.ttl <= 0 && this.isBase) {\n      boom();\n      const sparks = Array.from({ length: randint(16, 24) }, _ =>\n        createFireWork(this.x, this.y, 0, 0, this.colour, false)\n      );\n      fireworks.push(...sparks);\n    }\n  }\n}\n\nexport const createFireWork = (x, y, width, height, colour, isBase = true) => {\n  const ttl = isBase ? randint(50, 120) : randint(80, 120);\n  const destination = isBase\n    ? { x: width * Math.random(), y: (height / 20) * Math.random() }\n    : {};\n  const [vx, vy] = isBase\n    ? [(destination.x - x) / ttl, (destination.y - y) / ttl]\n    : [20 * (0.5 - Math.random()), -20 * (0.75 - Math.random())];\n  return new FireWork(\n    x,\n    y,\n    vx,\n    vy,\n    isBase\n      ? `rgb(${100 + randint(0, 155)},${100 + randint(0, 155)},${100 +\n          randint(0, 155)})`\n      : colour,\n    ttl,\n    isBase ? randint(3, 8) : randint(1, 3),\n    isBase\n  );\n};\n\nexport const fireworksTick = ctx => {\n  const { width, height } = ctx.canvas;\n  if (Math.random() < 0.02) {\n    const firework = createFireWork(\n      width / (1.8 + 0.4 * Math.random()),\n      height * (1 + 0.2 * Math.random()),\n      width,\n      height,\n      true\n    );\n    fireworks.push(firework);\n  }\n  fireworks = fireworks.filter(firework => firework.ttl);\n  ctx.clearRect(0, 0, width, height);\n  fireworks.forEach(firework => {\n    let radius = firework.isBase\n      ? firework.radius\n      : Math.min(firework.radius, firework.ttl / 2);\n    ctx.lineWidth = radius;\n    ctx.strokeStyle = firework.colour;\n    ctx.fillStyle = firework.colour;\n    ctx.beginPath();\n    ctx.arc(firework.x, firework.y, radius / 2, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.globalAlpha = 0.6;\n    ctx.stroke();\n    firework.update({ ax: 0, ay: height / 5000 });\n    radius = firework.isBase\n      ? firework.radius\n      : Math.min(firework.radius, firework.ttl / 2);\n    ctx.lineWidth = radius;\n    ctx.strokeStyle = firework.colour;\n    ctx.fillStyle = firework.colour;\n    ctx.beginPath();\n    ctx.arc(firework.x, firework.y, radius / 2, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.globalAlpha = 1;\n    ctx.stroke();\n  });\n};\n","import React from 'react';\nimport './HappyBirthday.css';\n\nconst HappyBirthday = props => (\n  <div className=\"happy-birthday\">\n    <span role=\"img\" aria-label=\"Confetti Ball\">\n      🎊\n    </span>\n    <h1>\n      Happy Birthday,{' '}\n      {props.name[0].toUpperCase() + props.name.slice(1).toLowerCase()}\n    </h1>\n    <span role=\"img\" aria-label=\"Party Popper\">\n      🎉\n    </span>\n  </div>\n);\n\n// TODO: message for non-birthday days, button to reset user, counter for how many days till the next birthday\n\nexport default HappyBirthday;\n","import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport InfoManager from './components/InfoManager';\nimport { fireworksTick } from './utils';\nimport HappyBirthday from './components/HappyBirthday';\n\nconst App = () => {\n  const [userData, setUserData] = useState({});\n  const canvas = useRef(null);\n  const onSubmit = data => {\n    setUserData({ ...userData, ...data });\n  };\n  useEffect(() => {\n    //import loadstate\n    if (userData.name && userData.dateOfBirth) {\n      const ctx = canvas.current.getContext('2d');\n      setInterval(() => fireworksTick(ctx), 16);\n    }\n  }, [userData.name, userData.dateOfBirth]);\n  return (\n    <div className=\"app\">\n      <InfoManager onSubmit={onSubmit} {...userData} />\n      {userData.name && userData.dateOfBirth && (\n        <>\n          <canvas\n            id=\"canvas\"\n            height={window.innerHeight}\n            ref={canvas}\n            width={window.innerWidth}\n          />\n          <HappyBirthday\n            name={userData.name}\n            dateOfBirth={userData.dateOfBirth}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}